#!/usr/bin/env perl
# This file is part of CSVql.
#
# CSVql is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CSVql is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CSVql.  If not, see <http://www.gnu.org/licenses/>.

use utf8;
use strict;
use warnings;

use FindBin;
use Getopt::Long;
use Pod::Usage;
use lib "$FindBin::Bin/../lib";

use CSVql;

my $opt_show_help;
my $opt_delimiter;
my $opt_quote_char;

GetOptions(
	"help|?" => \$opt_show_help,
	"delimiter=s" => \$opt_delimiter,
	"quote=s" => \$opt_quote_char
    ) or pod2usage(2); 

# Show help if the user asks for it OR when no columns are selected
pod2usage(-verbose => 99) if $opt_show_help;
pod2usage(1) if not @ARGV;

# Start processing the CSV file
my @columns = @ARGV;

my %csv_params;
$csv_params{delimiter} = $opt_delimiter if $opt_delimiter;
$csv_params{quote_char} = $opt_quote_char if $opt_quote_char;
my $csv = CSVql->new(%csv_params);

# Verify column names
foreach my $column (@columns) {
    print STDERR "'$column' is not a column the CSV file\n" unless $csv->is_column($column);
}

print $csv->format(@columns)."\n";
while(my $row = $csv->fetch_row()) {
    my @out;
    push @out, $$row{$_} for @columns;

    print $csv->format(@out);
    print "\n";
}

__END__

=head1 NAME

select - Select columns in CSV files

=head1 SYNOPSIS

select [-h] [-d delimiter] [-q quotation] columns

=head1 DESCRIPTION

Selects the specified columns from a CSV file. The columns to be shown are specified by their names.

=head1 OPTIONS

=over 8

=item B<--help>

Shows this help message

=item B<-d> or B<--delimiter>

Sets the delimiter character in the CSV file

=item B<-q> or B<--quote>

Sets the quote character in the CSV file

=back

=head1 AUTHOR

Ondřej Sýkora <mail@ondrejsykora.com>

=cut
